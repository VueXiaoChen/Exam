<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.wiki.mapper.QuestionMapper">
  <resultMap id="BaseResultMap" type="com.example.wiki.domain.Question">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="question_type" jdbcType="INTEGER" property="questionType" />
    <result column="subject_id" jdbcType="INTEGER" property="subjectId" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="grade_level" jdbcType="INTEGER" property="gradeLevel" />
    <result column="difficult" jdbcType="INTEGER" property="difficult" />
    <result column="info_text_content_id" jdbcType="INTEGER" property="infoTextContentId" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.wiki.domain.Question">
    <result column="correct" jdbcType="LONGVARCHAR" property="correct" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, question_type, subject_id, score, grade_level, difficult, info_text_content_id, 
    create_user, `status`, create_time, deleted
  </sql>
  <sql id="Blob_Column_List">
    correct
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.example.wiki.domain.QuestionExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.example.wiki.domain.QuestionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_question
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_question
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.wiki.domain.QuestionExample">
    delete from t_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.wiki.domain.Question">
    insert into t_question (id, question_type, subject_id, 
      score, grade_level, difficult, 
      info_text_content_id, create_user, `status`, 
      create_time, deleted, correct
      )
    values (#{id,jdbcType=INTEGER}, #{questionType,jdbcType=INTEGER}, #{subjectId,jdbcType=INTEGER}, 
      #{score,jdbcType=INTEGER}, #{gradeLevel,jdbcType=INTEGER}, #{difficult,jdbcType=INTEGER}, 
      #{infoTextContentId,jdbcType=INTEGER}, #{createUser,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT}, #{correct,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.wiki.domain.Question">
    insert into t_question
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="questionType != null">
        question_type,
      </if>
      <if test="subjectId != null">
        subject_id,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="gradeLevel != null">
        grade_level,
      </if>
      <if test="difficult != null">
        difficult,
      </if>
      <if test="infoTextContentId != null">
        info_text_content_id,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="correct != null">
        correct,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="questionType != null">
        #{questionType,jdbcType=INTEGER},
      </if>
      <if test="subjectId != null">
        #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="gradeLevel != null">
        #{gradeLevel,jdbcType=INTEGER},
      </if>
      <if test="difficult != null">
        #{difficult,jdbcType=INTEGER},
      </if>
      <if test="infoTextContentId != null">
        #{infoTextContentId,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="correct != null">
        #{correct,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.wiki.domain.QuestionExample" resultType="java.lang.Long">
    select count(*) from t_question
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_question
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=INTEGER},
      </if>
      <if test="row.questionType != null">
        question_type = #{row.questionType,jdbcType=INTEGER},
      </if>
      <if test="row.subjectId != null">
        subject_id = #{row.subjectId,jdbcType=INTEGER},
      </if>
      <if test="row.score != null">
        score = #{row.score,jdbcType=INTEGER},
      </if>
      <if test="row.gradeLevel != null">
        grade_level = #{row.gradeLevel,jdbcType=INTEGER},
      </if>
      <if test="row.difficult != null">
        difficult = #{row.difficult,jdbcType=INTEGER},
      </if>
      <if test="row.infoTextContentId != null">
        info_text_content_id = #{row.infoTextContentId,jdbcType=INTEGER},
      </if>
      <if test="row.createUser != null">
        create_user = #{row.createUser,jdbcType=INTEGER},
      </if>
      <if test="row.status != null">
        `status` = #{row.status,jdbcType=INTEGER},
      </if>
      <if test="row.createTime != null">
        create_time = #{row.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.deleted != null">
        deleted = #{row.deleted,jdbcType=BIT},
      </if>
      <if test="row.correct != null">
        correct = #{row.correct,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_question
    set id = #{row.id,jdbcType=INTEGER},
      question_type = #{row.questionType,jdbcType=INTEGER},
      subject_id = #{row.subjectId,jdbcType=INTEGER},
      score = #{row.score,jdbcType=INTEGER},
      grade_level = #{row.gradeLevel,jdbcType=INTEGER},
      difficult = #{row.difficult,jdbcType=INTEGER},
      info_text_content_id = #{row.infoTextContentId,jdbcType=INTEGER},
      create_user = #{row.createUser,jdbcType=INTEGER},
      `status` = #{row.status,jdbcType=INTEGER},
      create_time = #{row.createTime,jdbcType=TIMESTAMP},
      deleted = #{row.deleted,jdbcType=BIT},
      correct = #{row.correct,jdbcType=LONGVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_question
    set id = #{row.id,jdbcType=INTEGER},
      question_type = #{row.questionType,jdbcType=INTEGER},
      subject_id = #{row.subjectId,jdbcType=INTEGER},
      score = #{row.score,jdbcType=INTEGER},
      grade_level = #{row.gradeLevel,jdbcType=INTEGER},
      difficult = #{row.difficult,jdbcType=INTEGER},
      info_text_content_id = #{row.infoTextContentId,jdbcType=INTEGER},
      create_user = #{row.createUser,jdbcType=INTEGER},
      `status` = #{row.status,jdbcType=INTEGER},
      create_time = #{row.createTime,jdbcType=TIMESTAMP},
      deleted = #{row.deleted,jdbcType=BIT}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.wiki.domain.Question">
    update t_question
    <set>
      <if test="questionType != null">
        question_type = #{questionType,jdbcType=INTEGER},
      </if>
      <if test="subjectId != null">
        subject_id = #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="gradeLevel != null">
        grade_level = #{gradeLevel,jdbcType=INTEGER},
      </if>
      <if test="difficult != null">
        difficult = #{difficult,jdbcType=INTEGER},
      </if>
      <if test="infoTextContentId != null">
        info_text_content_id = #{infoTextContentId,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="correct != null">
        correct = #{correct,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.wiki.domain.Question">
    update t_question
    set question_type = #{questionType,jdbcType=INTEGER},
      subject_id = #{subjectId,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      grade_level = #{gradeLevel,jdbcType=INTEGER},
      difficult = #{difficult,jdbcType=INTEGER},
      info_text_content_id = #{infoTextContentId,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT},
      correct = #{correct,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.wiki.domain.Question">
    update t_question
    set question_type = #{questionType,jdbcType=INTEGER},
      subject_id = #{subjectId,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      grade_level = #{gradeLevel,jdbcType=INTEGER},
      difficult = #{difficult,jdbcType=INTEGER},
      info_text_content_id = #{infoTextContentId,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>